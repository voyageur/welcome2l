.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH WELCOME2L 1 "Welcome2L Version 3.04" "28/Jun/99" "Welcome2L User's Manual"
.IX Title "WELCOME2L 1"
.UC
.IX Name "Welcome2l - Linux ANSI boot logo."
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
.IX Header "NAME"
Welcome2l \- Linux ANSI boot logo.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\fBWelcome2L\fR [ \fB\-scr\fR ] [ \fB\-getty\fR ] [ \fB\-msg\fR ] [ \fB\-cpu\fR ] [ \fB\-lcol\fR ]  [ \fB\-nolf\fR ] [ \fB\-private\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\fBWelcome2L\fR is a little program that may run at login time to produce a BBS
like ANSI login logo. It's very similar to Linux_Logo. But where Linux_Logo
intends to be portable, Welcome2L intends to produce the best looking
ANSI screens by making full usage of PC graphic characters. Therefore
an architecture able to display those characters (i386, Alpha with TGA adapter,
\&... ) is required to use it. And, even if it will work on larger screens,
it will only produce 80 column ANSI screens. 
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\fB\-getty\fR" 8
.IX Item "\fB\-getty\fR"
Will display more accurate information when launched at boot time.
.Ip "\fB\-nolf\fR" 8
.IX Item "\fB\-nolf\fR"
Will not add an empty line to the ansi screen produced.
.Ip "\fB\-msg\fR" 8
.IX Item "\fB\-msg\fR"
-msg"text of message\*(R" will show the message given as the distribution info.
.Ip "\fB\-cpu\fR" 8
.IX Item "\fB\-cpu\fR"
-cpu"name\*(R" will show the  name given as the \s-1CPU\s0 name.
.Ip "\fB\-scr\fRxx" 8
.IX Item "\fB\-scr\fRxx"
Will display screen number xx. 
.Ip "\fB\-scrrand\fR" 8
.IX Item "\fB\-scrrand\fR"
Will display a random screen. 
.Ip "\fB\-lcol\fRxx" 8
.IX Item "\fB\-lcol\fRxx"
Will change the prompt color to the color number xx. Type Welcome2L \-help to see
what number is attributed to a color.
.Ip "\fB\-private\fR" 8
.IX Item "\fB\-private\fR"
Display an \*(L"Unauthorized access is prohibited\*(R" line at the bottom 
of the \s-1ANSI\s0 screen
.Ip "\fB\-help\fR" 8
.IX Item "\fB\-help\fR"
Will display usage information. 
.SH "EXAMPLE"
.IX Header "EXAMPLE"
\&./Welcome2L \-getty \-msg"RedHat Linux\*(R" \-lcol14
 
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.Sh "On RedHat systems "
.IX Subsection "On RedHat systems "
cd to /etc/rc.d/
edit rc.local, near the end find these lines (may be not exactly the same) :
.PP
.Vb 3
\&    echo "" > /etc/issue
\&    echo "Red Hat Linux $R" >> /etc/issue
\&    echo "Kernel $(uname r) on $a $(uname m)" >> /etc/issue
.Ve
comment them out and add this one (change the version numbers to yours) :
.PP
.Vb 1
\&    /usr/local/bin/Welcome2L -msg"Red Hat 5.0 (Hurricane)" > /etc/issue
.Ve
.Sh "On Debian systems "
.IX Subsection "On Debian systems "
[ From: Gerd Bavendiek <bav@rw.sni.de> ]
   I put a script in
   lulu:/etc/rc.boot> ls
   0setserial  1netenv     2hdparm  3Welcome2L
    
    It's contents is just:    
   #!/bin/sh
    /usr/local/bin/Welcome2L \-getty \-msg"Debian \s-1GNU/\s0Linux 2.0\*(R" > /etc/issue
.Sh "On Slackware systems"
.IX Subsection "On Slackware systems"
[ From: Joe X <obliteration@hotmail.com> ]
  add these lines in /etc/rc.d/rc.S
  /usr/local/bin/Welcome2L > /etc/issue
  /usr/local/bin/Welcome2L > /etc/issue.net
.Sh "On \s-1SUSE\s0 5.3 system:"
.IX Subsection "On \s-1SUSE\s0 5.3 system:"
[ From: Ronny Ziegler <ronny.ziegler@usa.net> ]
.PP
.Vb 1
\& 1) Put the following script called logo into /sbin/init.d
.Ve
.Vb 21
\& #! /bin/sh
\& #
\& #Author: Ronny Ziegler <ronny.ziegler@usa.net>, 1998
\& #
\& # /sbin/init.d/logo
\& #
\& case "$1" in
\&     start)
\&         echo "Starting  logo"
\&         /usr/local/bin/Welcome2L
\&         /bin/sleep 1
\&         ;;
\&     stop)
\&         ;;
\&     reload|restart)
\&         ;;
\&     *)
\&         echo "Usage: $0 {start|stop|reload|restart}"
\&         exit 1
\& esac
\& exit 0
.Ve
.Vb 7
\& 2) cd /sbin/init.d/rc2.d
\& 3) mv S99zzreached S98zzreached
\& 4) ln -s ../logo S99logo
\&    Now the logo will be executed as last before login-prompt
\& 5) You don't need the old Login-Text any more:
\&     mv /etc/issue /etc/issue.orig
\&     touch /etc/issue
.Ve
.Sh "On \s-1SUSE\s0 6.0 system:"
.IX Subsection "On \s-1SUSE\s0 6.0 system:"
[ From: Ronny Ziegler <ronny.ziegler@usa.net> ]
.PP
You should have an error-free bootprocess before installing Welcome2L.
 
 1) Add the following in your /sbin/init.d/rc file as 
    the line before last (that´s the one with exit 0)  
        /usr/local/bin/Welcome2L
    where this is the path to your Welcome2L\-executeable
.PP
.Vb 4
\& 1b)Optional: If you dont´t like Welcome2L to overwrite your 
\&    boot-messages, add 
\&        echo -e \e\ev\e\ev\e\ev\e\ev\e\ev\e\ev
\&    (or some more \e\ev ´s) in you rc before starting Welcome2L.  
.Ve
.Vb 3
\& 2) Now you don´t need the old Login-Text any more:
\&    mv /etc/issue /etc/issue.orig
\&    touch /etc/issue
.Ve
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
Welcome2L is not intended to run in a xterm.
.SH "CAVEAT"
.IX Header "CAVEAT"
Because \*(L"A \*(L'welcome\*(R' page has been proven to be an invitation 
to come your system, thus making it legal to hack into your box.\*(R" 
you may want to use the \*(L"\-private\*(R" arg when running Welcome2L
to display an \*(L"Unauthorized access is prohibited\*(R" line at the bottom 
of the ANSI screen. 
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\fBWelcome2L Copyright (C)1998-1999 Little Igloo Org\fR is freely distributable 
under the \fBGNU Public License\fR, a copy of which you should have received 
with this software (in a file called \fICOPYING\fR).
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
You can get the last Welcome2L version, sources, binaries distribution
or RedHat Packages, at : \fIhttp://www.LittleIgloo.org\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Jean-Marc Jacquet <jm@littleigloo.org>

.rn }` ''
